import streamlit as st
import pandas as pd
import requests
from datetime import datetime, timedelta

st.set_page_config(page_title="GitHub Monitor", layout="wide")

st.title("üìä –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—î–∫—Ç—ñ–≤ GitHub")

# === 1. –í–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º ===
st.sidebar.header("‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")
repos_input = st.sidebar.text_area(
    "–í–≤–µ–¥—ñ—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó–≤ (—Ñ–æ—Ä–º–∞—Ç: owner/repo, –ø–æ –æ–¥–Ω–æ–º—É –≤ —Ä—è–¥–æ–∫):",
    "torvalds/linux\nmicrosoft/vscode\ntensorflow/tensorflow"
)

token = st.sidebar.text_input("GitHub Access Token (–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ)", type="password")

if st.sidebar.button("üîç –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ"):
    repos = [r.strip() for r in repos_input.split("\n") if r.strip()]
    headers = {"Authorization": f"token {token}"} if token else {}

    all_data = []
    since = (datetime.utcnow() - timedelta(days=30)).isoformat() + "Z"

    st.info("–ó–±–∏—Ä–∞—é –¥–∞–Ω—ñ –∑ GitHub...")

    for repo_name in repos:
        url = f"https://api.github.com/repos/{repo_name}"
        commits_url = f"https://api.github.com/repos/{repo_name}/commits?since={since}"

        repo_data = requests.get(url, headers=headers).json()
        commits_data = requests.get(commits_url, headers=headers).json()

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –Ω–µ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç
        if isinstance(repo_data, dict) and repo_data.get("message") == "API rate limit exceeded":
            st.error("‚õî –ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç –∑–∞–ø–∏—Ç—ñ–≤ GitHub API! –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —Ç–æ–∫–µ–Ω.")
            st.stop()

        commits_count = len(commits_data) if isinstance(commits_data, list) else 0

        all_data.append({
            "–†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π": repo_name,
            "‚≠ê –ó—ñ—Ä–∫–∏": repo_data.get("stargazers_count", 0),
